---
import { render, type CollectionEntry } from 'astro:content'

import WritingsLayout from '@/layouts/writings.astro'

import SiteHeader from '@/components/SiteHeader.astro'
import SiteFooter from '@/components/SiteFooter.astro'
import Meta from '@/components/Meta.astro'
import Link from '@/components/Link.astro'
import DateComponent from '@/components/Date.astro'
import Table from '@/components/Table.astro'
import TocNode from '@/components/TocNode.astro'

import { getPosts } from '@/utils/collections'
import { getModDate } from '@/utils/mod_date'
import { buildTree } from '@/utils/toc_tree'
import { postColumns, getPostsData } from '@/models/table'

export async function getStaticPaths() {
  const posts = await getPosts()
  return posts.map((post) => ({
    params: {
      slug: post.id.substring(5),
    },
    props: {
      post,
    },
  }))
}

interface Props {
  post: CollectionEntry<'posts'>
}
const { post } = Astro.props

const { Content, headings } = await render(post)
const rootHeading = buildTree(headings)
const modDate = getModDate(post.id)

const allPosts = await getPosts()

const seriesPosts = allPosts.filter(
  (item) => item.data.series === post.data.series
)
const seriesPostsData = getPostsData(seriesPosts)

const metadata = {
  title: `Post: ${post.data.title}`,
  description: post.data.description,
}
---

<WritingsLayout>
  <slot
    name="head"
    slot="head">
    <Meta data={metadata} />
  </slot>

  <div class="grid grid-cols-[640px_320px_1fr]">
    <!-- left column -->
    <div>
      <SiteHeader classes="xl:hidden" />

      <aside class="cntnr my-4">
        <h1 class="text-3xl text-peach sm:text-5xl">{post.data.title}</h1>

        <dl class="mb-2 grid grid-cols-[auto_1fr] gap-x-2">
          <dt class="text-overlay1">Tags:</dt>
          <dd>
            <ul class="inline">
              {
                post.data.categories.map((category: string) => (
                  <li class="inline-block after:mr-1 after:text-overlay1 after:content-['Â·'] last:after:content-none">
                    {category}
                  </li>
                ))
              }
            </ul>
          </dd>
          <dt class="text-overlay1">First published:</dt>
          <dd><DateComponent date={post.data.pubDate} /></dd>
          <dt class="text-overlay1">Last updated:</dt>
          <dd><DateComponent date={modDate} /></dd>
        </dl>

        <details class="group lg:hidden xl:block 2xl:hidden">
          <summary
            class="inline-block cursor-pointer rounded-sm border border-surface1 px-1 py-0.5 group-open:border-peach hover:bg-surface0"
            >Contents</summary
          >
          <TocNode heading={rootHeading} />
        </details>

        <hr class="-mx-4 border-surface1" />

        <article class="md-post">
          <Content />
        </article>

        <h2>Responses</h2>
        <p>
          If you have thoughts or feelings about this post, send them my way via
          your preferred <Link url="/">communication channel</Link>. Webmention
          support will be added soon.
        </p>

        {
          post.data.series && (
            <Fragment>
              <h2>Series: '{post.data.series}'</h2>
              <p>
                This post is part of the '{post.data.series}' series. If you
                liked it, you might also like these other posts in the series.
              </p>
              <Table
                columns={postColumns}
                data={seriesPostsData}
              />
            </Fragment>
          )
        }
      </aside>

      <SiteFooter classes="xl:hidden" />
    </div>

    <!-- right column -->
    <div class="hidden border-s border-surface1 lg:block xl:hidden 2xl:block">
      <div class="sticky top-0 max-h-screen overflow-y-auto px-4">
        <h2>Contents</h2>
        <TocNode heading={rootHeading} />
      </div>
    </div>

    <!-- dark void -->
    <div
      class="hidden border-s border-surface1 bg-mantle lg:block xl:hidden 2xl:block"
      aria-hidden="true">
    </div>
  </div>
</WritingsLayout>
