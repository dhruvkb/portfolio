---
const isDev = import.meta.env.DEV
---

{
  isDev && (
    <span class="text-blue">
      Breakpoint:
      <span class="sm:hidden">mobile</span>
      <span class="hidden sm:inline lg:hidden">sm</span>
      <span class="hidden lg:inline xl:hidden">lg</span>
      <span class="hidden xl:inline 2xl:hidden">xl</span>
      <span class="hidden 2xl:inline">2xl</span>
      <page-width>
        <span id="width" />
      </page-width>
    </span>
  )
}

<script>
  /** Populate screen width and update it on resize using `ResizeObserver`. */

  class PageWidth extends HTMLElement {
    observer: ResizeObserver

    constructor() {
      super()

      this.observer = new ResizeObserver(() => {
        this.updateWidth()
      })
    }
    updateWidth() {
      const widthEl = this.querySelector('#width')
      if (widthEl) widthEl.textContent = ` (${window.innerWidth}px)`
    }
    connectedCallback() {
      this.updateWidth()
      this.observer.observe(document.body)
    }
    disconnectedCallback() {
      this.observer.disconnect()
    }
  }

  customElements.define('page-width', PageWidth)
</script>
