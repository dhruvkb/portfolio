---
import Link from '@/components/Link.astro'

import { site } from '@/stores/site'
import { getPages } from '@/utils/collections'

// Links have a trailing slash because each page becomes a directory when built.
const pages = await getPages()
const navLinks = pages
  .filter((page) => page.data.path !== '/' && page.data.isNav)
  .map((page) => ({
    text: page.data.title,
    url: page.data.path,
  }))

const pathName = new URL(Astro.request.url).pathname

function getNormalised(path: string): string {
  return path.replace(/\/$/, '')
}
const isHome = getNormalised(pathName) === ''

function getIsMatch(url: string): boolean {
  return getNormalised(pathName).startsWith(getNormalised(url))
}
function getIsExactMatch(url: string): boolean {
  return getNormalised(pathName) === getNormalised(url)
}
---

<header
  class="cntnr flex flex-col items-start justify-between gap-2 border-b py-4 sm:flex-row sm:items-center">
  <Link url="/">
    <!-- Class `inline-block` prevents underline from `Link`. -->
    <span
      class="inline-block font-bold hover:underline hover:decoration-wavy"
      class:list={[{ 'text-red underline decoration-red': isHome }]}>
      {site.title}
    </span>
  </Link>
  <nav>
    <ul class="my-0 flex list-none items-center">
      {
        navLinks.map((link) => (
          <li class="me-4 last:me-0">
            <Link url={link.url}>
              {/* Class `inline-block` prevents underline from `Link`. */}
              <span
                class="inline-block"
                class:list={[
                  { 'text-red underline': getIsMatch(link.url) },
                  getIsExactMatch(link.url)
                    ? ['decoration-red', 'visited:decoration-red']
                    : [
                        'no-underline',
                        'hover:underline',
                        'hover:decoration-wavy',
                        'decoration-curr',
                        'visited:decoration-curr',
                      ],
                ]}>
                {link.text}
              </span>
            </Link>
          </li>
        ))
      }
    </ul>
  </nav>
</header>
